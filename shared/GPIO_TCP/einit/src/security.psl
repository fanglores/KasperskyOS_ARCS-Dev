use trusted._

use EDL server.Server
use EDL kl.drivers.BSP
use EDL kl.drivers.GPIO
use EDL env.Env
use EDL vfs.NetVfs

/* Return of errors is allowed */
error {
    grant ()
}

/**
 * These instructions enables to start up and initialize entities specified in file init.yaml.in.
 */
execute src = Einit, dst = kl.drivers.BSP
{
    grant()
}

execute src = Einit, dst = kl.drivers.GPIO
{
    grant()
}

execute src = Einit, dst = server.Server
{
    grant()
}

execute src = Einit, dst = vfs.NetVfs
{
    grant()
}

execute src = Einit, dst = env.Env
{
    grant()
}

/**
 * This code enables to send requests from entities to KOS kernel and get
 * responses. It makes able to use system calls by entities.
 */
request src = vfs.NetVfs, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = vfs.NetVfs
{
    grant()
}

request src = server.Server, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = server.Server
{
    grant()
}

request src = server.Server, dst = vfs.NetVfs
{
    grant()
}

response src = vfs.NetVfs, dst = server.Server
{
    grant()
}

request src = kl.drivers.GPIO, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = kl.drivers.GPIO
{
    grant()
}

request src = kl.drivers.BSP, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = kl.drivers.BSP
{
    grant()
}

request src = server.Server, dst = kl.drivers.BSP
{
    grant()
}

response src = server.Server, dst = kl.drivers.BSP
{
    grant()
}

request src = kl.drivers.BSP, dst = server.Server
{
    grant()
}

response src = kl.drivers.BSP, dst = server.Server
{
    grant()
}

request src = server.Server, dst = kl.drivers.GPIO
{
    grant()
}

response src = kl.drivers.GPIO, dst = server.Server
{
    grant()
}

request src = env.Env, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = env.Env
{
    grant()
}

request src = vfs.NetVfs, dst = env.Env
{
    grant()
}

response src = env.Env, dst = vfs.NetVfs
{
    grant()
}

request src = server.Server, dst = env.Env
{
    grant()
}

response src = env.Env, dst = server.Server
{
    grant()
}
